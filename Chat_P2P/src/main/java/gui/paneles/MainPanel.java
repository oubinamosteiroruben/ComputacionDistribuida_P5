/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.paneles;

import Cliente.Peer;
import static definiciones.Definiciones.RUTA_ICON;
import gui.VUsuario;
import gui.modelos.ModeloTablaAmigos;
import java.awt.BorderLayout;
import java.awt.Image;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import modelos.MensajeChat;
import modelos.Usuario;


public class MainPanel extends javax.swing.JPanel {

    private final VUsuario vu;
    
    private String amigoChatActual;
    
    private HashMap<String,ArrayList<MensajeChat>> conversaciones; 
    /**
     * Creates new form MainPanel
     */
    public MainPanel(VUsuario vu) {
        this.conversaciones = new HashMap<>();
        this.amigoChatActual = null;
        this.vu = vu;
        initComponents();
        this.textChat.setEditable(false);
        this.txtNombreAmigo.setText("Selecciona un amigo");
        this.txtMensaje.setEnabled(false);
        this.buttonEnviar.setEnabled(false);
        this.txtNombreUsuario.setText("Hola, " + Peer.getInstance().getUsuario() + ".");
        this.setIcon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaConectados = new javax.swing.JTable();
        buttonSolicitudes = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtNombreAmigo = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textChat = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtMensaje = new javax.swing.JTextArea();
        buttonEnviar = new javax.swing.JButton();
        txtNombreUsuario = new javax.swing.JLabel();
        salirDeLaAplicacion = new javax.swing.JLabel();
        icon = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 100), new java.awt.Dimension(0, 100), new java.awt.Dimension(32767, 100));

        setMaximumSize(new java.awt.Dimension(542, 454));
        setMinimumSize(new java.awt.Dimension(542, 454));
        setPreferredSize(new java.awt.Dimension(542, 454));

        jPanel1.setMaximumSize(new java.awt.Dimension(170, 430));
        jPanel1.setMinimumSize(new java.awt.Dimension(170, 430));
        jPanel1.setName("jPanel1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tablaConectados.setModel(new ModeloTablaAmigos(this));
        tablaConectados.setName("tablaConectados"); // NOI18N
        tablaConectados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaConectadosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaConectados);

        buttonSolicitudes.setText("Solicitudes");
        buttonSolicitudes.setName("buttonSolicitudes"); // NOI18N
        buttonSolicitudes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSolicitudesActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Amigos");
        jLabel1.setName("jLabel1"); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .add(buttonSolicitudes, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 280, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(buttonSolicitudes)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setMaximumSize(new java.awt.Dimension(330, 430));
        jPanel2.setMinimumSize(new java.awt.Dimension(330, 430));
        jPanel2.setName("jPanel2"); // NOI18N

        txtNombreAmigo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtNombreAmigo.setText("nombreAmigo");
        txtNombreAmigo.setName("txtNombreAmigo"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        textChat.setName("textChat"); // NOI18N
        jScrollPane2.setViewportView(textChat);

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        txtMensaje.setColumns(20);
        txtMensaje.setLineWrap(true);
        txtMensaje.setRows(1);
        txtMensaje.setName("txtMensaje"); // NOI18N
        jScrollPane3.setViewportView(txtMensaje);

        buttonEnviar.setText("↑");
        buttonEnviar.setName("buttonEnviar"); // NOI18N
        buttonEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEnviarActionPerformed(evt);
            }
        });

        txtNombreUsuario.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtNombreUsuario.setText("Hola, ");
        txtNombreUsuario.setName("txtNombreUsuario"); // NOI18N

        salirDeLaAplicacion.setFont(new java.awt.Font("Helvetica Neue", 2, 13)); // NOI18N
        salirDeLaAplicacion.setForeground(new java.awt.Color(51, 102, 255));
        salirDeLaAplicacion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        salirDeLaAplicacion.setText(" Salir de la aplicación. ");
        salirDeLaAplicacion.setName("salirDeLaAplicacion"); // NOI18N
        salirDeLaAplicacion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                salirDeLaAplicacionMouseClicked(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(txtNombreAmigo, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(buttonEnviar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jScrollPane2)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, salirDeLaAplicacion, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, txtNombreUsuario, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(txtNombreUsuario)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(salirDeLaAplicacion)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(txtNombreAmigo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 192, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(buttonEnviar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(40, 40, 40))
        );

        icon.setName("icon"); // NOI18N

        filler1.setName("filler1"); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(33, 33, 33)
                        .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(208, 208, 208)
                        .add(icon, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 96, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(32, 32, 32)
                .add(filler1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(filler1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(icon, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 85, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 396, Short.MAX_VALUE))))
                .add(32, 32, 32))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonSolicitudesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSolicitudesActionPerformed
        // TODO add your handling code here:
        this.vu.mostrarSolicitudes();
    }//GEN-LAST:event_buttonSolicitudesActionPerformed

    private void tablaConectadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaConectadosMouseClicked
        // TODO add your handling code here:
        this.txtMensaje.setEnabled(false);
        this.buttonEnviar.setEnabled(false);
        String amigo;
        ModeloTablaAmigos m;
        m = (ModeloTablaAmigos) this.tablaConectados.getModel();
        amigo = m.obtenerAmigo(this.tablaConectados.getSelectedRow());
        if (amigo != null) {
            this.amigoChatActual = amigo;
            actualizarChat();
            this.txtMensaje.setEnabled(true);
            this.buttonEnviar.setEnabled(true);
        }
    }//GEN-LAST:event_tablaConectadosMouseClicked

    private void buttonEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEnviarActionPerformed
        // TODO add your handling code here:
        try{
            if(!this.txtMensaje.getText().equals("") && this.amigoChatActual != null){
                MensajeChat mc = new MensajeChat(this.vu.getUsuarioActual(),amigoChatActual,this.txtMensaje.getText());
                this.conversaciones.get(amigoChatActual).add(mc);
                this.vu.enviarMensaje(mc);
                actualizarChat();
                this.txtMensaje.setText("");
            }
        }catch(Exception e){
            System.out.println("Exception: " + e);
        }
    }//GEN-LAST:event_buttonEnviarActionPerformed

    private void salirDeLaAplicacionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salirDeLaAplicacionMouseClicked
        this.vu.cerrarAplicacion();
        System.exit(0);
    }//GEN-LAST:event_salirDeLaAplicacionMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonEnviar;
    private javax.swing.JButton buttonSolicitudes;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel icon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel salirDeLaAplicacion;
    private javax.swing.JTable tablaConectados;
    private javax.swing.JTextPane textChat;
    private javax.swing.JTextArea txtMensaje;
    private javax.swing.JLabel txtNombreAmigo;
    private javax.swing.JLabel txtNombreUsuario;
    // End of variables declaration//GEN-END:variables

    public void setIcon(){
        ImageIcon imgIcon = new ImageIcon(RUTA_ICON);
        Image imgEscalada = imgIcon.getImage().getScaledInstance(96, 85, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado = new ImageIcon(imgEscalada);
        this.icon.setIcon(iconoEscalado);
    }
    
    public String getAmigoChatActual(){
        return this.amigoChatActual;
    }
    
    public void setAmigoChatActual(String amigo){
        this.amigoChatActual = amigo;
    }

    public void actualizarAmigosConectados(ArrayList<String> amigos){
        HashMap<String,ArrayList<MensajeChat>> conversacionesAux = new HashMap<>();
        for(String a: amigos){
            if(this.conversaciones.get(a) == null){
                conversacionesAux.put(a,new ArrayList<>());
            }else{
                conversacionesAux.put(a, this.conversaciones.get(a));
            }
        }
        this.conversaciones = conversacionesAux;
        ((ModeloTablaAmigos) this.tablaConectados.getModel()).setFilas(this.conversaciones);
    }
    
    public void actualizarChat(){
        String contenido = "";
        if(this.amigoChatActual != null){
            ArrayList<MensajeChat> chat = this.conversaciones.get(this.amigoChatActual);
            if(chat == null){
                this.conversaciones.put(this.amigoChatActual, new ArrayList<>());
            }else{
                Boolean flag = false;
                for(MensajeChat mc: chat){
                    if(mc.getEmisor().equals(this.amigoChatActual) && !mc.isLeido()){
                        mc.setLeido(true);
                        flag = true;
                    }
                    contenido+=mc.getEmisor()+": " + mc.getCuerpo() + "\n";
                }
                if(flag){
                    ((ModeloTablaAmigos) this.tablaConectados.getModel()).setFilas(this.conversaciones);
                }
            }
        }
        this.textChat.setText(contenido);
        this.txtNombreAmigo.setText(this.amigoChatActual);
    }
    
    public void recibirMensaje(MensajeChat mc){
        this.conversaciones.get(mc.getEmisor()).add(mc);
        if(mc.getEmisor().equals(amigoChatActual)){
            actualizarChat();
        }else{
            ((ModeloTablaAmigos) this.tablaConectados.getModel()).setFilas(this.conversaciones);
        }
    }
    
    public void mostrarNumeroSolicitudes(int numeroPeticiones){
        String texto = "Solicitudes";
        if(numeroPeticiones > 0){
            texto += " (" + numeroPeticiones + ")";
        }
        this.buttonSolicitudes.setText(texto);
    }
    
    
}
